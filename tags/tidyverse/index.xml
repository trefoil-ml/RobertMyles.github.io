<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tidyverse on Robert Myles McDonnell</title>
    <link>/tags/tidyverse/</link>
    <description>Recent content in Tidyverse on Robert Myles McDonnell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Dec 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/tidyverse/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Make a colour table in R with ggplot2</title>
      <link>/colour-table.html</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/colour-table.html</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;I loved &lt;a href=&#34;https://github.com/hdugan/rColorTable/blob/master/rColorTable.R&#34;&gt;this&lt;/a&gt; R script from hdugan when I first saw it a while ago. The script makes a 2-page pdf of all the colors available in R, using R. Nice.&lt;/p&gt;
&lt;p&gt;The other day, I thought about making a tidyverse version of it, using dplyr to get the data ready and ggplot2 to visualize it. I won’t for a second pretend that this code is as short and tidy as the original, and in fact it may be a good example of when base R can be really useful, but anyway here it is. (The pdf it produces follows.) The table shows all the colours available in R, from the base colour on the left hand side, and then a scale of increasingly darker hues (from 1 to 4) for colours that have them. The basic idea was to create six plots and place them side by side using &lt;code&gt;cowplot::plot_grid()&lt;/code&gt;. (&lt;code&gt;grid.arrange()&lt;/code&gt; from the gridExtra package was a little less customizable.) So here you go: a tidyverse R Colour Table. (Using RColorBrewer you could add some purdy palette extensions). It’s a one-page pdf, you could split into smaller images by subsetting the data and so on.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R colors minus 100 shades of grey

library(stringr)
library(tidyverse)


# get &amp;#39;data&amp;#39;:

colour &amp;lt;- data_frame(colours = colors()) %&amp;gt;%
  filter(!grepl(&amp;quot;gray&amp;quot;, colours),
         !grepl(&amp;quot;grey&amp;quot;, colours)) %&amp;gt;%
  mutate(general_colour = gsub(&amp;quot;[0-9]&amp;quot;, &amp;quot;&amp;quot;, colours),
         c1 = ifelse(grepl(&amp;quot;1&amp;quot;, colours), 1, 0),
         c2 = ifelse(grepl(&amp;quot;2&amp;quot;, colours), 1, 0),
         c3 = ifelse(grepl(&amp;quot;3&amp;quot;, colours), 1, 0),
         c4 = ifelse(grepl(&amp;quot;4&amp;quot;, colours), 1, 0)) %&amp;gt;%
  select(-1) %&amp;gt;%
  group_by(general_colour) %&amp;gt;%
  summarise_each(funs(sum)) %&amp;gt;%
  ungroup() %&amp;gt;%
  mutate(c1 = ifelse(grepl(1, c1), paste0(general_colour, c1), NA),
         c2 = ifelse(grepl(1, c2), paste0(general_colour, &amp;quot;2&amp;quot;), NA),
         c3 = ifelse(grepl(1, c3), paste0(general_colour, &amp;quot;3&amp;quot;), NA),
         c4 = ifelse(grepl(1, c4), paste0(general_colour, &amp;quot;4&amp;quot;), NA),
         c1 = ifelse(is.na(c1), general_colour, c1),
         c2 = ifelse(is.na(c2), general_colour, c2),
         c3 = ifelse(is.na(c3), general_colour, c3),
         c4 = ifelse(is.na(c4), general_colour, c4))


## create six plots:
# Just the names, by setting alpha to 0:
g0 &amp;lt;- ggplot(colour, aes(x = general_colour)) +
  geom_bar(position = &amp;quot;stack&amp;quot;, alpha = 0) +
  coord_flip() +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
        axis.title.x = element_blank(), panel.grid = element_blank(),
        axis.title.y = element_blank())

g &amp;lt;- ggplot(colour, aes(x = general_colour, color = general_colour,
                   fill = general_colour)) +
  geom_bar(position = &amp;quot;stack&amp;quot;) +
  coord_flip() +
  scale_color_manual(values = colour$general_colour) +
  scale_fill_manual(values = colour$general_colour) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text = element_blank(), axis.ticks = element_blank(),
        axis.title = element_blank(), panel.grid = element_blank())

g_1 &amp;lt;- ggplot(colour, aes(x = c1, color = c1,
                        fill = c1)) +
  geom_bar(position = &amp;quot;stack&amp;quot;) +
  coord_flip() +
  scale_color_manual(values = colour$c1) +
  scale_fill_manual(values = colour$c1) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text = element_blank(), axis.ticks = element_blank(),
        axis.title = element_blank(), panel.grid = element_blank())

g_2 &amp;lt;- ggplot(colour, aes(x = c2, color = c2,
                        fill = c2)) +
  geom_bar(position = &amp;quot;stack&amp;quot;) +
  coord_flip() +
  scale_color_manual(values = colour$c2) +
  scale_fill_manual(values = colour$c2) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text = element_blank(), axis.ticks = element_blank(),
        axis.title = element_blank(), panel.grid = element_blank())

g_3 &amp;lt;- ggplot(colour, aes(x = c3, color = c3,
                        fill = c3)) +
  geom_bar(position = &amp;quot;stack&amp;quot;) +
  coord_flip() +
  scale_color_manual(values = colour$c3) +
  scale_fill_manual(values = colour$c3) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text = element_blank(), axis.ticks = element_blank(),
        axis.title = element_blank(), panel.grid = element_blank())

g_4 &amp;lt;- ggplot(colour, aes(x = c4, color = c4,
                        fill = c4)) +
  geom_bar(position = &amp;quot;stack&amp;quot;) +
  coord_flip() +
  scale_color_manual(values = colour$c4) +
  scale_fill_manual(values = colour$c4) +
  theme_minimal() +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  theme(axis.text = element_blank(), axis.ticks = element_blank(),
        axis.title = element_blank(), panel.grid = element_blank())

library(cowplot)
# Here I create a pdf, but you can just as easily create a
# png or a jpeg.

pdf(file = &amp;quot;color_chart_dplyr.pdf&amp;quot;, height = 35, width = 8)
plot_grid(g0, g, g_1, g_2, g_3, g_4, align = &amp;quot;h&amp;quot;, ncol = 6,
          rel_widths = c(.75, 1.05, 1.05, 1.05, 1.05, 1.05))
dev.off()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src = &#34;http://i.imgur.com/JVXhXyj.png&#34;&gt;&lt;/p&gt;


&lt;!-- BLOGDOWN-HEAD




/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>